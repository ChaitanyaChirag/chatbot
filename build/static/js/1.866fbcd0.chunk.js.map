{"version":3,"sources":["components/delaycomponent/index.js","components/showmessage/index.js","components/inputcomposer/index.js","components/dotsloader/index.js","components/errorboundary/index.js","components/chatbotconversation/index.js"],"names":["DelayComponent","Component","state","shouldRender","props","isMounted","nextProps","this","delayMountTime","delayUnmountTime","setTimeout","setState","React","defaultProps","ShowMessageComponenet","message","title","color","fontSize","fontLight","size","height","width","sad","success","failed","chainBreak","className","classNames","style","animationDuration","src","alt","trim","length","PureComponent","ShowMessage","propTypes","PropTypes","string","number","bool","TextArea","Input","InputComposer","handleInputChange","event","input_message","target","value","stopTypingIndicator","typing","emitCustomEvent","payload","clientPsid","psid","isTyping","EVENTS","TYPING_STATUS","inputKeyDown","e","keyCode","shiftKey","handleMessageSend","clearTimeout","typingTimer","onClickMic","listening","startListening","stopListening","resetTranscript","stopSpeechListening","preventDefault","text","sendTextToServer","onRemove","file","fileUrl","prevProps","prevState","transcript","is_input_lock","input_lock_text","onClickMenu","onInputFocus","browserSupportsSpeechRecognition","notification_bot","beforeUpload","android","isAndroid","onClick","showUploadList","onSubmit","placeholder","autosize","minRows","maxRows","name","disabled","onKeyDown","onFocus","onChange","htmlType","SpeechRecognition","autoStart","DotsLoader","dot_color","ErrorBoundary","hasError","error","errorInfo","Sentry","scope","Object","keys","forEach","key","setExtra","onErrorCallback","type","children","ERROR_BOUNDARY_TYPE","ERROR","ChatBotConversation","isTimeStampTagVisible","timestamp","prev_timestamp","Date","getTime","displayTimeStamp","current_time","message_time","formatDate","year","month","day","onClickMessageVoting","voteType","onMessageVoting","chatlogId","renderReadStatusIcon","readStatus","MESSAGE_READ_STATUS","SENDING","SENT","DELIVERED","SEEN","messages","messagesContainer","scrollToBottom","is_typing","typing_text","handleMsgBtnClick","onChangeCheckbox","stack_view","btn_disabled","bubble_animation","handleFileUpload","map","index","first_msg","sender","senderInfo","customer","MESSAGE_SENDER","CUSTOMER","system","SYSTEM","admin","ADMIN","chatbot","CHATBOT","show_textMessage","MESSAGE_TYPES","TEXT","show_listMessage","LIST","show_textWithButtons","TEXT_WITH_BUTTONS","show_checkboxWithMedia","CHECKBOX_WITH_MEDIA","show_imageWithButtons","IMAGE_WITH_BUTTONS","show_textWithVideo","VIDEO","show_carousel","CAROUSEL","show_textWithMedia","show_promptmsg","NOTIFICATION","show_uploadfile","UPLOAD_FILE","show_recharge","CUSTOM_MSG","subtype","MESSAGE_SUBTYPES","DISH_RECHARGE","show_rechargeDetails","DISH_RECHARGE_DETAILS","show_offers","DISH_OFFERS","show_rechargeHistory","DISH_RECHARGE_HISTORY","sender_title","sender_img_url","pseudoName","imgUrl","show_timestamp_tag","SYSTEM_TEXT","formatTime","hour","minute","chatbot_client_info","icon_url","charAt","disable_html_parser","btn_hidden","checkbox_disabled","handleOfferSelection","disable_offer","Fragment","bind"],"mappings":"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","file":"static/js/1.866fbcd0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DelayComponent = (Component) => {\n    return class extends React.Component {\n        state = {\n            shouldRender: this.props.isMounted\n        }\n\n        componentWillReceiveProps(nextProps) {\n            const { isMounted, delayMountTime, delayUnmountTime } = this.props;\n            if ((isMounted && !nextProps.isMounted)) {\n                setTimeout(() => this.setState({ shouldRender: false }), delayUnmountTime)\n            } else if (!isMounted && nextProps.isMounted) {\n                setTimeout(() => this.setState({ shouldRender: true }), delayMountTime)\n            }\n        }\n\n        render() {\n            return this.state.shouldRender ? <Component {...this.props} /> : null\n        }\n    }\n}\n\nDelayComponent.propTypes = {\n    delayMountTime: PropTypes.number,\n    delayUnmountTime: PropTypes.number,    \n    isMounted: PropTypes.bool\n}\n\nDelayComponent.defaultProps = {\n    delayMountTime: 0,\n    delayUnmountTime: 0,\n}\n\nexport default DelayComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SuccessIcon from 'react-icons/lib/io/android-checkmark-circle';\nimport ChainBreak from 'react-icons/lib/fa/chain-broken';\nimport FailedIcon from 'react-icons/lib/md/cancel';\n\n// import { icons } from '../../data/assets/assetsurl';\n\nimport DelayComponent from '../delaycomponent';\n\nclass ShowMessageComponenet extends React.PureComponent {\n    render() {\n        const { message, title, color, fontSize, fontLight, size, height, width, isMounted, delayUnmountTime, sad, success, failed, chainBreak } = this.props;\n\n        return (\n            <div className={classNames(\"ori-animated ori-full-parent-height ori-pad-20 ori-flex-column ori-flex-center\", { \"ori-fade-in\": isMounted, \"ori-fade-out\": !isMounted })} style={{ animationDuration: `${delayUnmountTime}ms` }}>\n                <div className={classNames(\"ori-animated ori-b-mrgn-10\", { \"ori-font-primary\": color === \"primary\", \"ori-font-green\": color === \"green\", \"ori-font-warning\": color === \"warning\", \"ori-font-danger\": color === \"danger\", \"ori-zoom-in\": isMounted, \"ori-zoom-out\": !isMounted })} style={{ animationDuration: `${delayUnmountTime}ms` }}>\n                    {\n                        sad &&\n                        <div style={{ height: height + 'px', width: width + 'px' }}>\n                            <img src=\"\" alt=\"\" className=\"ori-img-contain\" />\n                        </div>\n                    }\n                    {\n                        chainBreak &&\n                        <ChainBreak size={size} />\n                    }\n                    {\n                        success &&\n                        <SuccessIcon size={size} />\n                    }\n                    {\n                        failed &&\n                        <FailedIcon size={size} />\n                    }\n                </div>\n                {\n                    title && title.trim().length > 0 &&\n                    <p className={classNames(\"ori-no-b-mrgn ori-capitalize\", { \"ori-font-xs\": fontSize === \"xxs\", \"ori-font-sm\": fontSize === \"xs\", \"ori-font-md\": fontSize === \"sm\", \"ori-font-lg\": fontSize === \"md\" })}>{title}</p>\n                }\n                <p className={classNames(\"ori-no-b-mrgn\", { \"ori-font-xxs\": fontSize === \"xxs\", \"ori-font-xs\": fontSize === \"xs\", \"ori-font-sm\": fontSize === \"sm\", \"ori-font-md\": fontSize === \"md\", \"ori-font-light\": fontLight })}>{message}</p>\n            </div>\n        );\n    }\n}\n\nconst ShowMessage = DelayComponent(ShowMessageComponenet);\n\nShowMessage.propTypes = {\n    message: PropTypes.string,\n    title: PropTypes.string,\n    color: PropTypes.string,\n    size: PropTypes.number,\n    fontSize: PropTypes.string,\n    fontLight: PropTypes.bool,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    sad: PropTypes.bool,\n    success: PropTypes.bool,\n    chainBreak: PropTypes.bool,\n    failed: PropTypes.bool,\n    isMounted: PropTypes.bool,\n    delayUnmountTime: PropTypes.number\n};\n\nShowMessage.defaultProps = {\n    title: null,\n    size: 30,\n    fontSize: \"sm\",\n    fontLight: false,\n    height: 60,\n    width: 60,\n    sad: false,\n    success: false,\n    failed: false,\n    chainBreak: false,\n    delayUnmountTime: 500,\n    delayMountTime: 0\n};\n\nexport default ShowMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SpeechRecognition from 'react-speech-recognition';\nimport Button from 'antd/lib/button';\nimport Form from 'antd/lib/form';\nimport Input from 'antd/lib/input';\nimport Upload from 'antd/lib/upload';\n// import { Button, Form, Input, Upload } from 'antd';\nimport SendIcon from 'react-icons/lib/md/send';\nimport MicIcon from 'react-icons/lib/md/mic';\nimport MenuIcon from 'react-icons/lib/md/menu';\nimport CircleDotIcon from 'react-icons/lib/md/adjust';\nimport AddFileIcon from 'react-icons/lib/md/add-circle';\n\nimport './index.scss';\n\nimport { isAndroid } from '../../data/config/utils';\nimport { EVENTS } from '../../data/config/constants';\n\nconst { TextArea } = Input;\n\nclass InputComposer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.typingTimer = null;\n    this.state = {\n      input_message: \"\",\n      typing: false,\n      file: null,\n      fileUrl: \"\",\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transcript, listening } = this.props;\n    if (listening && prevProps.transcript !== transcript) {\n      this.setState({ input_message: transcript });\n    }\n  }\n\n  handleInputChange = event => {\n    const input_message = event.target.value;\n    this.setState({ input_message });\n  };\n\n  stopTypingIndicator = () => {\n    if (this.state.typing) {\n      this.setState({ typing: false }, () => {\n        const { emitCustomEvent, psid } = this.props;\n        const payload = {\n          clientPsid: psid,\n          isTyping: false,\n        };\n        emitCustomEvent(EVENTS.TYPING_STATUS, payload);\n      });\n    }\n  };\n\n  inputKeyDown = e => {\n    const { input_message, typing } = this.state;\n    const { psid, emitCustomEvent } = this.props;\n    if (e.keyCode === 13 && !e.shiftKey && input_message.trim().length > 0) {\n      this.handleMessageSend(e);\n    } else {\n      if (!typing) {\n        this.setState({ typing: true }, () => {\n          const payload = {\n            clientPsid: psid,\n            isTyping: true,\n          };\n          emitCustomEvent(EVENTS.TYPING_STATUS, payload);\n        });\n        this.typingTimer = setTimeout(this.stopTypingIndicator, 3000);\n      } else {\n        clearTimeout(this.typingTimer);\n        this.typingTimer = setTimeout(this.stopTypingIndicator, 3000);\n      }\n    }\n  };\n\n  onClickMic = () => {\n    const { listening, startListening, stopListening, resetTranscript } = this.props;\n    if (listening) {\n      stopListening();\n    } else {\n      resetTranscript();\n      startListening();\n    }\n  };\n\n  stopSpeechListening = () => {\n    const { listening, stopListening } = this.props;\n    this.setState({ input_message: \"\" });\n    if (listening) {\n      stopListening();\n    }\n  };\n\n  handleMessageSend = e => {\n    e.preventDefault();\n    const text = this.state.input_message.trim();\n    this.props.sendTextToServer(text);\n    this.stopSpeechListening();\n    this.stopTypingIndicator();\n    if (this.typingTimer) {\n      clearTimeout(this.typingTimer);\n    }\n  };\n\n\n\n  onRemove = file => {\n    this.setState({\n      file: null,\n      fileUrl: \"\",\n    });\n  };\n\n  render() {\n    const { is_input_lock, input_lock_text, onClickMenu, onInputFocus, browserSupportsSpeechRecognition, listening, notification_bot, beforeUpload, onRemove } = this.props;\n    const { input_message } = this.state;\n    const android = isAndroid();\n\n    return (\n      <div className={classNames(\"ori-relative ori-full-width oriInputComposerContainer\", { \"ori-placeholder-primary\": is_input_lock || listening })}>\n        {\n          !notification_bot && !listening &&\n          <div className=\"ori-animated ori-fade-in ori-absolute ori-pad-5 ori-cursor-ptr ori-flex-column ori-flex-jc alignMenuIcon\" onClick={onClickMenu}>\n            <MenuIcon size={20} />\n          </div>\n        }\n        {\n          listening &&\n          <div className={classNames(\"ori-absolute ori-pad-5 ori-cursor-ptr ori-flex-column ori-flex-jc ori-font-danger\", { \"alignCircleDotIcon\": notification_bot, \"alignMenuIcon\": !notification_bot })} onClick={this.stopSpeechListening}>\n            <CircleDotIcon size={18} className=\"ori-animated ori-ripple ori-infinite\" />\n          </div>\n        }\n        <div className=\"ori-animated ori-fade-in ori-absolute ori-pad-5 ori-cursor-ptr ori-flex-column ori-flex-jc alignAddFileIcon\">\n          <Upload\n            showUploadList={false}\n            beforeUpload={beforeUpload}\n            onRemove={onRemove}\n          >\n            <AddFileIcon size={20} className=\"ori-font-light-hover-default\" />\n          </Upload>\n        </div>\n        <Form onSubmit={this.handleMessageSend}>\n          <TextArea\n            placeholder={is_input_lock ? input_lock_text : (listening ? \"Listening...\" : \"send your query...\")}\n            className=\"ori-font-sm ori-line-height-1 inputField\"\n            autosize={{ minRows: 1, maxRows: android ? 1 : 3 }}\n            value={input_message}\n            name=\"input_message\"\n            disabled={is_input_lock}\n            onKeyDown={this.inputKeyDown}\n            onFocus={onInputFocus}\n            onChange={this.handleInputChange}\n          />\n          {\n            (input_message.trim().length > 0 || !browserSupportsSpeechRecognition) &&\n            <Button className={classNames(\"ori-animated ori-fade-in ori-absolute ori-pad-5 ori-flex-column ori-flex-jc alignSendButton\", { \"sendBtnActive\": input_message.trim().length > 0 })} htmlType=\"submit\" disabled={input_message.trim().length === 0 || is_input_lock}>\n              <SendIcon size={20} />\n            </Button>\n          }\n          {\n            input_message.trim().length === 0 && browserSupportsSpeechRecognition &&\n            <Button className={classNames(\"ori-animated ori-fade-in ori-absolute ori-pad-5 ori-flex-column ori-flex-jc alignSendButton\")} disabled={is_input_lock} onClick={this.onClickMic}>\n              <MicIcon size={20} className={classNames(\"ori-font-light btnIcon\", { \"ori-font-primary ori-animated ori-pulse ori-infinite\": listening })} />\n            </Button>\n          }\n        </Form>\n      </div>\n    );\n  }\n}\n\nInputComposer.propTypes = {\n  psid: PropTypes.string,\n  is_input_lock: PropTypes.bool,\n  input_lock_text: PropTypes.string,\n  onClickMenu: PropTypes.func,\n  sendTextToServer: PropTypes.func,\n  onInputFocus: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool,\n  transcript: PropTypes.string,\n  emitCustomEvent: PropTypes.func,\n};\n\nInputComposer.defaultProps = {\n  is_input_lock: false,\n  notification_bot: false,\n  emitCustomEvent: () => { },\n};\n\nconst options = {\n  autoStart: false,\n};\n\nexport default SpeechRecognition(options)(InputComposer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nclass DotsLoader extends React.PureComponent{ \n    render() {\n        const {dot_color} = this.props;\n        return (\n            <div className=\"ori-flex-row oriDotsLoaderContainer\">\n                <div className={`dot one ${dot_color}`}>&nbsp;</div>\n                <div className={`dot two ${dot_color}`}>&nbsp;</div>\n                <div className={`dot three ${dot_color}`}>&nbsp;</div>\n            </div>\n        );\n    };\n}\n\nDotsLoader.propTypes = {\n    dot_color: PropTypes.string,\n};\n\nDotsLoader.defaultProps = {\n    dot_color: \"ori-bg-primary\",\n}\n\nexport default DotsLoader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Sentry from '@sentry/browser';\n\nimport { ERROR_BOUNDARY_TYPE } from '../../data/config/constants';\n\nimport ShowMessage from '../showmessage';\n\nexport default class ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        Sentry.withScope(scope => {\n            Object.keys(errorInfo).forEach(key => {\n                scope.setExtra(key, errorInfo[key]);\n            });\n            Sentry.captureException(error);\n        });\n        this.setState({ hasError: true }, () => {\n            if (this.props.onErrorCallback) {\n                this.props.onErrorCallback();\n            }\n        });\n    }\n\n    render() {\n        const { type, children } = this.props;\n        const { hasError } = this.state;\n\n        if (hasError) {\n            if (type === ERROR_BOUNDARY_TYPE.ERROR) {\n                return (\n                    <ShowMessage title=\"Error\" message=\"something went worng.\" height={100} width={100} error />\n                );\n            } else {\n                return null;\n            }\n        } else {\n            return children;\n        }\n    }\n}\n\nErrorBoundary.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n    type: PropTypes.string,\n    onErrorCallback: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ThumbUpIcon from 'react-icons/lib/fa/thumbs-o-up';\nimport SentIcon from 'react-icons/lib/io/android-done';\nimport DeliverIcon from 'react-icons/lib/io/android-done-all';\nimport SeenIcon from 'react-icons/lib/md/remove-red-eye';\nimport SendingIcon from 'react-icons/lib/md/rotate-right';\nimport Avatar from 'antd/lib/avatar';\nimport { TextMessage, TextWithMedia, CarouselWithButtons, PromptMsg, CheckboxWithMedia, ListMessage, UploadFile, Recharge, RechargeDetails, Offers, RechargeHistory } from 'chatbot-message-types';\n\nimport './index.scss';\n\nimport { MESSAGE_SENDER, MESSAGE_TYPES, MESSAGE_SUBTYPES, MESSAGE_READ_STATUS } from '../../data/config/constants';\nimport { chatbot_client_info } from '../../data/config/urls';\nimport { formatTime, formatDate, scrollToBottom } from '../../data/config/utils';\n\nimport DotsLoader from '../dotsloader';\nimport ErrorBoundary from '../errorboundary';\n\nclass ChatBotConversation extends React.PureComponent {\n  componentDidUpdate(prevProps, prevState) {\n    let { messages, messagesContainer } = this.props;\n    if (prevProps.messages.length !== messages.length) {\n      scrollToBottom(messagesContainer);\n    }\n  };\n\n  isTimeStampTagVisible = (timestamp, prev_timestamp) => {\n    const t1 = new Date(timestamp).getTime();\n    const t2 = new Date(prev_timestamp).getTime();\n    if ((t1 - t2) > 24 * 3600 * 1000) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  displayTimeStamp = timestamp => {\n    const current_time = new Date().getTime();\n    const message_time = new Date(timestamp).getTime();\n    if ((current_time - message_time) < 24 * 3600 * 1000) {\n      return \"Today\";\n    } else if ((current_time - message_time) < 2 * 24 * 3600 * 1000) {\n      return \"Yesterday\";\n    } else {\n      return formatDate(timestamp, { year: \"numeric\", month: \"short\", day: \"numeric\" });\n    }\n  };\n\n  onClickMessageVoting = (message, voteType) => {\n    const { onMessageVoting } = this.props;\n    const payload = { chatlogId: message.chatlogId, voteType };\n    onMessageVoting(payload);\n  };\n\n  renderReadStatusIcon = readStatus => {\n    if (readStatus === MESSAGE_READ_STATUS.SENDING) {\n      return (\n        <SendingIcon size={13} className=\"ori-l-mrgn-5 ori-animated ori-rotate ori-infinite\" />\n      );\n    } else if (readStatus === MESSAGE_READ_STATUS.SENT) {\n      return (\n        <SentIcon size={13} className=\"ori-l-mrgn-5\" />\n      );\n    } else if (readStatus === MESSAGE_READ_STATUS.DELIVERED) {\n      return (\n        <DeliverIcon size={13} className=\"ori-l-mrgn-5\" />\n      );\n    } else if (readStatus === MESSAGE_READ_STATUS.SEEN) {\n      return (\n        <SeenIcon size={13} className=\"ori-l-mrgn-5\" />\n      );\n    }\n  };\n\n  render() {\n    const { messages, is_typing, typing_text, handleMsgBtnClick, onChangeCheckbox, notification_bot, stack_view, btn_disabled, bubble_animation, handleFileUpload } = this.props;\n\n    return (\n      <div className=\"ori-full-width ori-l-pad-20 ori-r-pad-40 ori-tb-pad-10 oriChatBotConversationContainer\">\n        {\n          messages.map((message, index) => {\n            const first_msg = (index === 0) || (index > 0 && ((messages[index - 1].sender !== message.sender) || (messages[index - 1].senderInfo && message.senderInfo && messages[index - 1].senderInfo.psid !== message.senderInfo.psid)));\n\n            const customer = message.sender === MESSAGE_SENDER.CUSTOMER;\n            const system = message.sender === MESSAGE_SENDER.SYSTEM;\n            const admin = message.sender === MESSAGE_SENDER.ADMIN;\n            const chatbot = message.sender === MESSAGE_SENDER.CHATBOT;\n\n            const show_textMessage = message.type === MESSAGE_TYPES.TEXT;\n            const show_listMessage = message.type === MESSAGE_TYPES.LIST;\n            const show_textWithButtons = message.type === MESSAGE_TYPES.TEXT_WITH_BUTTONS;\n            const show_checkboxWithMedia = message.type === MESSAGE_TYPES.CHECKBOX_WITH_MEDIA;\n            const show_imageWithButtons = message.type === MESSAGE_TYPES.IMAGE_WITH_BUTTONS;\n            const show_textWithVideo = message.type === MESSAGE_TYPES.VIDEO;\n            const show_carousel = message.type === MESSAGE_TYPES.CAROUSEL;\n            const show_textWithMedia = show_textWithButtons || show_imageWithButtons || show_textWithVideo;\n            const show_promptmsg = message.type === MESSAGE_TYPES.NOTIFICATION;\n            const show_uploadfile = message.type === MESSAGE_TYPES.UPLOAD_FILE;\n            const show_recharge = message.type === MESSAGE_TYPES.CUSTOM_MSG && message.payload.subtype === MESSAGE_SUBTYPES.DISH_RECHARGE;\n            const show_rechargeDetails = message.type === MESSAGE_TYPES.CUSTOM_MSG && message.payload.subtype === MESSAGE_SUBTYPES.DISH_RECHARGE_DETAILS;\n            const show_offers = message.type === MESSAGE_TYPES.CUSTOM_MSG && message.payload.subtype === MESSAGE_SUBTYPES.DISH_OFFERS;\n            const show_rechargeHistory = message.type === MESSAGE_TYPES.CUSTOM_MSG && message.payload.subtype === MESSAGE_SUBTYPES.DISH_RECHARGE_HISTORY;\n\n            let sender_title = \"u\";\n            let sender_img_url = \"\";\n            if (message.senderInfo) {\n              sender_title = message.senderInfo.pseudoName ? message.senderInfo.pseudoName : \"agent\";\n              sender_img_url = message.senderInfo.imgUrl && message.senderInfo.imgUrl.trim().length > 0 ? message.senderInfo.imgUrl : \"\";\n            }\n\n            const show_timestamp_tag = notification_bot ? false : (index === 0 ? true : (message.timestamp ? this.isTimeStampTagVisible(message.timestamp, messages[index - 1].timestamp) : false));\n\n            if (system && message.type === MESSAGE_TYPES.SYSTEM_TEXT) {\n              return (\n                <ErrorBoundary key={index}>\n                  <div className=\"ori-l-pad-25 ori-tb-pad-10 ori-text-center \">\n                    <p className=\"ori-font-medium ori-font-xs\">{message.payload.text}</p>\n                    {\n                      message.timestamp &&\n                      <p className=\"ori-font-xxs ori-font-light ori-lr-pad-10\">{formatTime(message.timestamp, { hour: \"2-digit\", minute: \"2-digit\" })}</p>\n                    }\n                  </div>\n                </ErrorBoundary>\n              );\n            }\n\n            return (\n              <ErrorBoundary key={index}>\n                <div className=\"ori-full-width\">\n                  {\n                    show_timestamp_tag &&\n                    <div className=\"ori-flex-row ori-flex-jc ori-l-pad-20\">\n                      <div className=\"ori-font-xs ori-border-radius-20 ori-lr-pad-10 ori-b-mrgn-10 ori-t-mrgn-15 ori-bg-header ori-box-shadow\">{this.displayTimeStamp(message.timestamp)}</div>\n                    </div>\n                  }\n                  <div className={classNames(\"ori-relative ori-flex-row msgContainer ori-animated \" + bubble_animation, { \"receiverMsgContainer\": admin || chatbot, \"senderMsgContainer\": customer })} >\n                    {\n                      first_msg && admin &&\n                      <p className=\"ori-absolute ori-font-11 ori-capitalize ori-align-top-4\" >{sender_title}</p>\n                    }\n                    {\n                      first_msg && chatbot &&\n                      <div className={classNames(\"ori-absolute ori-animated ori-fade-in msgAvatar\")}>\n                        <Avatar src={sender_img_url !== \"\" ? sender_img_url : chatbot_client_info.icon_url} />\n                      </div>\n                    }\n                    {\n                      first_msg && admin &&\n                      <div className={classNames(\"ori-absolute ori-animated ori-fade-in msgAvatar\")}>\n                        <Avatar src={sender_img_url} className=\"ori-font-default ori-capitalize ori-bg-white\">{sender_title.charAt(0)}</Avatar>\n                      </div>\n                    }\n                    {\n                      (show_textMessage || show_listMessage || show_textWithMedia || show_checkboxWithMedia || show_recharge || show_rechargeDetails || show_offers || show_rechargeHistory || show_carousel || show_promptmsg || show_uploadfile) &&\n                      <div className={classNames(\"ori-b-mrgn-4\", { \"ori-t-pad-20\": first_msg, \"bubbleIndicatorDefault\": first_msg && !notification_bot, \"bubbleIndicatorNotification\": first_msg && notification_bot && !stack_view, \"bubbleIndicatorStack\": first_msg && notification_bot && stack_view, \"ori-full-width\": show_carousel || show_uploadfile })}>\n                        <div className={classNames(\"ori-pad-7 ori-border-radius-10 msgBox\", { \"bubbleIndicator\": first_msg, \"defaultMsgBox\": !notification_bot, \"notificationMsgBox\": notification_bot && !stack_view, \"notificationStackMsgBox\": notification_bot && stack_view, \"oriOffers\": show_offers, \"ori-full-width oriRechargeHistory\": show_rechargeHistory, \"ori-full-width oriCarousel\": show_carousel, \"ori-l-pad-15\": show_listMessage })}>\n                          {\n                            show_textMessage &&\n                            <TextMessage message={message} disable_html_parser={customer} />\n                          }\n                          {\n                            show_listMessage &&\n                            <ListMessage message={message} />\n                          }\n                          {\n                            show_textWithMedia &&\n                            <TextWithMedia message={message} handleMsgBtnClick={handleMsgBtnClick} btn_hidden={stack_view} btn_disabled={btn_disabled} />\n                          }\n                          {\n                            show_checkboxWithMedia &&\n                            <CheckboxWithMedia message={message} handleMsgBtnClick={handleMsgBtnClick} onChangeCheckbox={onChangeCheckbox} checkbox_disabled={index !== (messages.length - 1)} btn_hidden={stack_view || index !== (messages.length - 1)} btn_disabled={btn_disabled} />\n                          }\n                          {\n                            show_recharge &&\n                            <Recharge message={message} handleMsgBtnClick={handleMsgBtnClick} btn_hidden={stack_view} btn_disabled={btn_disabled} />\n                          }\n                          {\n                            show_rechargeDetails &&\n                            <RechargeDetails message={message} handleMsgBtnClick={handleMsgBtnClick} btn_hidden={stack_view} btn_disabled={btn_disabled} />\n                          }\n                          {\n                            show_offers &&\n                            <Offers message={message} handleMsgBtnClick={handleMsgBtnClick} handleOfferSelection={this.props.handleOfferSelection} disable_offer={index !== (messages.length - 1) || stack_view} btn_disabled={btn_disabled} />\n                          }\n                          {\n                            show_rechargeHistory &&\n                            <RechargeHistory message={message} handleMsgBtnClick={handleMsgBtnClick} btn_hidden={stack_view} btn_disabled={btn_disabled} />\n                          }\n                          {\n                            show_carousel &&\n                            <CarouselWithButtons message={message} handleMsgBtnClick={handleMsgBtnClick} btn_hidden={stack_view} btn_disabled={btn_disabled} />\n                          }\n                          {\n                            show_promptmsg &&\n                            <PromptMsg message={message} handleMsgBtnClick={handleMsgBtnClick} btn_disabled={index !== (messages.length - 1) || btn_disabled} btn_hidden={stack_view} />\n                          }\n                          {\n                            show_uploadfile &&\n                            <UploadFile message={message} handleMsgBtnClick={handleMsgBtnClick} btn_disabled={btn_disabled} handleFileUpload={handleFileUpload} disabled={stack_view || index !== (messages.length - 1)} />\n                          }\n                          {\n                            (message.timestamp || message.chatlogId) &&\n                            <div className={classNames(\"ori-flex-row ori-line-height-1 ori-t-mrgn-3 ori-flex-jsb\", { \"ori-font-white\": customer, \"ori-font-light\": chatbot || admin })}>\n                              <div className=\"ori-flex-row\">\n                                {\n                                  message.chatlogId && (chatbot || admin) &&\n                                  <React.Fragment>\n                                    <div className={classNames(\"ori-flex ori-cursor-ptr ori-r-pad-5\", { \"ori-font-primary\": message.voteType && message.voteType === \"upvote\" })} onClick={this.onClickMessageVoting.bind(this, message, \"upvote\")} >\n                                      <ThumbUpIcon size={12} />\n                                    </div>\n                                    <div className={classNames(\"ori-flex ori-cursor-ptr ori-l-pad-5 ori-rotate-180\", { \"ori-font-primary\": message.voteType && message.voteType === \"downvote\" })} onClick={this.onClickMessageVoting.bind(this, message, \"downvote\")}>\n                                      <ThumbUpIcon size={12} />\n                                    </div>\n                                  </React.Fragment>\n                                }\n                              </div>\n                              {\n                                (message.timestamp || message.readStatus) &&\n                                <div className=\"ori-flex-row\">\n                                  {\n                                    message.timestamp &&\n                                    <span className=\"ori-font-xxs ori-flex-column ori-flex-jfe ori-uppercase\">{formatTime(message.timestamp, { hour: \"2-digit\", minute: \"2-digit\" })}</span>\n                                  }\n                                  {\n                                    customer && message.readStatus &&\n                                    this.renderReadStatusIcon(message.readStatus)\n                                  }\n                                </div>\n                              }\n                            </div>\n                          }\n                        </div>\n                      </div>\n                    }\n                  </div>\n                </div>\n              </ErrorBoundary>\n            );\n          })\n        }\n        {\n          is_typing &&\n          <div className=\"msgContainer receiverMsgContainer ori-flex-row ori-t-pad-5\">\n            <div className={classNames(\"ori-flex-row ori-border-radius-10 ori-pad-7\", { \"defaultMsgBox\": !notification_bot, \"notificationMsgBox\": notification_bot && !stack_view, \"notificationStackMsgBox\": notification_bot && stack_view })}>\n              {\n                typing_text !== \"\" &&\n                <div className=\"ori-font-xs ori-font-primary ori-capitalize-first ori-r-pad-5\">{typing_text}</div>\n              }\n              <div className=\"ori-flex-column ori-flex-jc\">\n                <DotsLoader />\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nChatBotConversation.propTypes = {\n  messages: PropTypes.array,\n  messagesContainer: PropTypes.object,\n  handleMsgBtnClick: PropTypes.func,\n  handleFileUpload: PropTypes.func,\n  onChangeCheckbox: PropTypes.func,\n  handleOfferSelection: PropTypes.func,\n  onMessageVoting: PropTypes.func,\n  is_typing: PropTypes.bool,\n  typing_text: PropTypes.string,\n  notification_bot: PropTypes.bool,\n  stack_view: PropTypes.bool,\n  bubble_animation: PropTypes.string,\n  btn_disabled: PropTypes.bool,\n};\n\nChatBotConversation.defaultProps = {\n  notification_bot: false,\n  bubble_animation: \"\",\n  typing_text: \"\",\n  is_typing: false,\n  stack_view: false,\n  btn_disabled: false,\n};\n\nexport default ChatBotConversation;\n"],"sourceRoot":""}