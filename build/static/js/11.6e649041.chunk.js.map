{"version":3,"sources":["modules/chatbot/components/endchat/index.js"],"names":["Option","Select","EndChat","renderSessionCloseConfirmation","props","end_chat","closeEndChatPopup","confirmEndConversation","is_socket_connected","show_confirmation_card","InfoCard","title","ok_text","onClickCancel","onClickOk","renderResolvedChatInfo","show_resolved_card","renderDynamicForm","handleFormInputChange","handleFormSelectChange","submitFormData","show_form_card","className","form","map","form_item","index","input_type","key","style","lineHeight","input_props","onChange","TextArea","id","getPopupContainer","document","getElementById","options","option","name","value","size","onClick","classNames","disabled","renderPoweredBy","chatbot_setting","powered_by","visibility","logo_url","icon_url","target_url","this","isMounted","backgroundImage","chat_interface","show_bg_image","bg_image_url","height","width","src","chatbot_client_info","brand_name","description","padding","React","PureComponent","defaultProps","DelayComponent"],"mappings":"0RAcQA,EAAWC,IAAXD,OAEFE,E,2MACJC,+BAAiC,WAAO,IAAD,EACgD,EAAKC,MAAlFC,EAD6B,EAC7BA,SAAUC,EADmB,EACnBA,kBAAmBC,EADA,EACAA,uBAAwBC,EADxB,EACwBA,oBAC7D,GAAIH,EAASI,uBACX,OACE,kBAACC,EAAD,CAAUF,oBAAqBA,EAAqBG,MAAM,sCAAsCC,QAAQ,UAAUC,cAAeP,EAAmBQ,UAAWP,K,EAIrKQ,uBAAyB,WAAO,IAAD,EACqC,EAAKX,MAA/DC,EADqB,EACrBA,SAAUE,EADW,EACXA,uBAAwBC,EADb,EACaA,oBAC1C,GAAIH,EAASW,mBACX,OACE,kBAACN,EAAD,CAAUF,oBAAqBA,EAAqBG,MAAM,oCAAoCG,UAAWP,K,EAI/GU,kBAAoB,WAAO,IAAD,EACoG,EAAKb,MAAzHI,EADgB,EAChBA,oBAAqBH,EADL,EACKA,SAAUC,EADf,EACeA,kBAAmBY,EADlC,EACkCA,sBAAuBC,EADzD,EACyDA,uBAAwBC,EADjF,EACiFA,eACzG,GAAIf,EAASgB,eACX,OACE,yBAAKC,UAAU,4EAEXjB,EAASkB,KAAKC,KAAI,SAACC,EAAWC,GAC5B,OAAQD,EAAUE,YAChB,IAAK,QACH,OACE,yBAAKC,IAAKF,EAAOJ,UAAU,gBAEvBG,EAAUd,OACV,yBAAKW,UAAU,0CAA0CO,MAAO,CAAEC,WAAY,QAAUL,EAAUd,OAEpG,kBAAC,IAAD,eAAOW,UAAU,eAAkBG,EAAUM,YAA7C,CAA0DC,SAAUd,MAI1E,IAAK,WACH,OACE,yBAAKU,IAAKF,EAAOJ,UAAU,gBAEvBG,EAAUd,OACV,yBAAKW,UAAU,0CAA0CO,MAAO,CAAEC,WAAY,QAAUL,EAAUd,OAEpG,kBAAC,IAAMsB,SAAP,eAAgBX,UAAU,eAAkBG,EAAUM,YAAtD,CAAmEC,SAAUd,MAInF,IAAK,SACH,OACE,yBAAKU,IAAKF,EAAOQ,GAAE,iBAAYR,GAASJ,UAAU,gBAE9CG,EAAUd,OACV,yBAAKW,UAAU,0CAA0CO,MAAO,CAAEC,WAAY,QAAUL,EAAUd,OAEpG,kBAAC,IAAD,eAAQW,UAAU,6BAA6Ba,kBAAmB,kBAAMC,SAASC,eAAT,iBAAkCX,MAAcD,EAAUM,YAAlI,CAA+IC,SAAUb,IAErJM,EAAUa,SAAWb,EAAUa,QAAQd,KAAI,SAACe,EAAQb,GAClD,OACE,kBAAC1B,EAAD,CAAQ4B,IAAKF,EAAOc,KAAMf,EAAUM,YAAYS,KAAMC,MAAOF,EAAOE,OAAQF,EAAOC,WASjG,QAAS,OAAO,SAItB,yBAAKlB,UAAU,4BACb,kBAAC,IAAD,CAAQA,UAAU,qDAAqDoB,KAAK,QAAQC,QAASrC,GAA7F,QACA,kBAAC,IAAD,CAAQgB,UAAWsB,IAAW,+BAAgC,CAAE,uBAAwBpC,IAAwBkC,KAAK,QAAQG,UAAWrC,EAAqBmC,QAASvB,GAAiBZ,EAAsB,SAAW,oB,EAMlOsC,gBAAkB,WAChB,GAAIC,IAAgBC,WAAWC,WAC7B,OACE,yBAAK3B,UAAU,qHACb,kBAAC,IAAD,CAAW4B,SAAUH,IAAgBC,WAAWG,SAAUC,WAAYL,IAAgBC,WAAWI,e,wEAM/F,IAAD,EACyBC,KAAKjD,MAA7BkD,EADD,EACCA,UAAWjD,EADZ,EACYA,SACnB,OACE,yBAAKiB,UAAWsB,IAAW,gIAAiI,CAAE,cAAeU,EAAW,gBAAiBA,EAAW,oBAAqBjD,EAASW,qBAAuBa,MAAO,CAAE0B,gBAAiBR,IAAgBS,eAAeC,cAA/B,cAAsDV,IAAgBS,eAAeE,aAArF,KAAuG,SACxY,yBAAKpC,UAAU,mHAAmHO,MAAO,CAAE8B,OAAQ,UACjJ,6BACE,yBAAKrC,UAAU,0CACb,kBAAC,IAAD,CAAQO,MAAO,CAAE8B,OAAQ,OAAQC,MAAO,QAAUC,IAAKC,IAAoBX,YAE7E,uBAAG7B,UAAU,8CAA8CwC,IAAoBC,YAE7E1D,EAAS2D,aACT,yBAAK1C,UAAU,wDACb,uBAAGA,UAAU,wDAAwDjB,EAAS2D,gBAKtF,yBAAK1C,UAAU,+BACb,yBAAKA,UAAU,yEAAyEO,MAAO,CAAEoC,QAAS,yBACvGZ,KAAKlD,iCACLkD,KAAKtC,yBACLsC,KAAKpC,sBAGToC,KAAKP,uB,GAlHQoB,IAAMC,eAwHtBzD,EAAW,SAACN,GAAW,IACnBI,EAAkEJ,EAAlEI,oBAAqBG,EAA6CP,EAA7CO,MAAOC,EAAsCR,EAAtCQ,QAASC,EAA6BT,EAA7BS,cAAeC,EAAcV,EAAdU,UAC5D,OACE,yBAAKQ,UAAU,6EACb,uBAAGA,UAAU,iBAAiBX,GAC9B,yBAAKW,UAAU,4BAEXT,GACA,kBAAC,IAAD,CAAQS,UAAU,qDAAqDoB,KAAK,QAAQC,QAAS9B,GAA7F,UAEF,kBAAC,IAAD,CAAQS,UAAWsB,IAAW,+BAAgC,CAAE,uBAAwBpC,IAAwBkC,KAAK,QAAQC,QAAS7B,EAAW+B,UAAWrC,GAAsBA,EAAsBI,EAAU,oBAc1NF,EAAS0D,aAAe,CACtB5D,qBAAqB,EACrBI,QAAS,MAcXV,EAAQkE,aAAe,CACrB5D,qBAAqB,EACrBH,SAAU,IAGGgE,sBAAenE","file":"static/js/11.6e649041.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from 'antd/lib/button';\nimport Avatar from 'antd/lib/avatar';\nimport Input from 'antd/lib/input';\nimport Select from 'antd/lib/select';\n// import { Input, Avatar, Button, Select } from 'antd';\n\nimport { chatbot_setting, chatbot_client_info } from '../../../../data/config/urls';\n\nimport DelayComponent from '../../../../components/delaycomponent';\nimport PoweredBy from '../../../../components/poweredby';\n\nconst { Option } = Select;\n\nclass EndChat extends React.PureComponent {\n  renderSessionCloseConfirmation = () => {\n    const { end_chat, closeEndChatPopup, confirmEndConversation, is_socket_connected } = this.props;\n    if (end_chat.show_confirmation_card)\n      return (\n        <InfoCard is_socket_connected={is_socket_connected} title=\"Do you want to close this session ?\" ok_text=\"Confirm\" onClickCancel={closeEndChatPopup} onClickOk={confirmEndConversation} />\n      );\n  };\n\n  renderResolvedChatInfo = () => {\n    const { end_chat, confirmEndConversation, is_socket_connected } = this.props;\n    if (end_chat.show_resolved_card)\n      return (\n        <InfoCard is_socket_connected={is_socket_connected} title=\"Agent has been resolved your chat\" onClickOk={confirmEndConversation} />\n      );\n  };\n\n  renderDynamicForm = () => {\n    const { is_socket_connected, end_chat, closeEndChatPopup, handleFormInputChange, handleFormSelectChange, submitFormData } = this.props;\n    if (end_chat.show_form_card)\n      return (\n        <div className=\"ori-pad-15 ori-bg-white ori-box-shadow ori-border-radius-5 ori-tb-mrgn-5\">\n          {\n            end_chat.form.map((form_item, index) => {\n              switch (form_item.input_type) {\n                case \"input\":\n                  return (\n                    <div key={index} className=\"ori-b-pad-15\">\n                      {\n                        form_item.title &&\n                        <div className=\"ori-capitalize ori-b-mrgn-7 ori-font-13\" style={{ lineHeight: '1.3' }}>{form_item.title}</div>\n                      }\n                      <Input className=\"ori-font-xs\" {...form_item.input_props} onChange={handleFormInputChange} />\n                    </div>\n                  );\n\n                case \"textarea\":\n                  return (\n                    <div key={index} className=\"ori-b-pad-15\">\n                      {\n                        form_item.title &&\n                        <div className=\"ori-capitalize ori-b-mrgn-7 ori-font-13\" style={{ lineHeight: '1.3' }}>{form_item.title}</div>\n                      }\n                      <Input.TextArea className=\"ori-font-xs\" {...form_item.input_props} onChange={handleFormInputChange} />\n                    </div>\n                  );\n\n                case \"select\":\n                  return (\n                    <div key={index} id={`select-${index}`} className=\"ori-b-pad-15\">\n                      {\n                        form_item.title &&\n                        <div className=\"ori-capitalize ori-b-mrgn-7 ori-font-13\" style={{ lineHeight: '1.3' }}>{form_item.title}</div>\n                      }\n                      <Select className=\"ori-full-width ori-font-xs\" getPopupContainer={() => document.getElementById(`select-${index}`)} {...form_item.input_props} onChange={handleFormSelectChange} >\n                        {\n                          form_item.options && form_item.options.map((option, index) => {\n                            return (\n                              <Option key={index} name={form_item.input_props.name} value={option.value}>{option.name}</Option>\n                            );\n                          })\n                        }\n\n                      </Select>\n                    </div>\n                  );\n\n                default: return null;\n              }\n            })\n          }\n          <div className=\"ori-flex-row ori-flex-jc\">\n            <Button className=\"ori-lr-mrgn-10 ori-lr-pad-15 ori-btn-ghost-primary\" size=\"small\" onClick={closeEndChatPopup} >Skip</Button>\n            <Button className={classNames(\"ori-lr-mrgn-10 ori-lr-pad-15\", { \"ori-btn-fill-primary\": is_socket_connected })} size=\"small\" disabled={!is_socket_connected} onClick={submitFormData}>{is_socket_connected ? 'Submit' : \"Connecting...\"}</Button>\n          </div>\n        </div>\n      );\n  };\n\n  renderPoweredBy = () => {\n    if (chatbot_setting.powered_by.visibility) {\n      return (\n        <div className=\"ori-absolute ori-align-bottom ori-align-left ori-align-right ori-flex-row ori-flex-jc ori-bg-white ori-box-shadow\">\n          <PoweredBy logo_url={chatbot_setting.powered_by.icon_url} target_url={chatbot_setting.powered_by.target_url} />\n        </div>\n      );\n    }\n  };\n\n  render() {\n    const { isMounted, end_chat } = this.props;\n    return (\n      <div className={classNames(\"ori-absolute ori-animated ori-animation-half ori-bg-white ori-align-full ori-z-index-99994 ori-bg-size-cover ori-bg-no-repeat\", { \"ori-fade-in\": isMounted, \"ori-fade-out\": !isMounted, \"ori-z-index-99995\": end_chat.show_resolved_card })} style={{ backgroundImage: chatbot_setting.chat_interface.show_bg_image ? `url(${chatbot_setting.chat_interface.bg_image_url})` : 'none' }}>\n        <div className=\"ori-lr-pad-15 ori-b-pad-15 ori-t-pad-20 ori-bg-gradient-primary-to-light ori-flex-row ori-flex-jc ori-font-white\" style={{ height: '220px' }}>\n          <div>\n            <div className=\"ori-tb-pad-10 ori-flex-row ori-flex-jc\">\n              <Avatar style={{ height: '55px', width: '55px' }} src={chatbot_client_info.icon_url} />\n            </div>\n            <p className=\"ori-lr-mrgn-10 ori-font-lg ori-text-center\">{chatbot_client_info.brand_name}</p>\n            {\n              end_chat.description &&\n              <div className=\"ori-block-text-overflow-dotted ori-dotted-after-xs-3\">\n                <p className=\"ori-animated ori-fade-in ori-font-xs ori-text-center\">{end_chat.description}</p>\n              </div>\n            }\n          </div>\n        </div>\n        <div className=\"ori-absolute ori-align-full\">\n          <div className=\"ori-relative ori-full-parent-height ori-full-width ori-overflow-y-auto\" style={{ padding: \"190px 15px 30px 15px\" }}>\n            {this.renderSessionCloseConfirmation()}\n            {this.renderResolvedChatInfo()}\n            {this.renderDynamicForm()}\n          </div>\n        </div>\n        {this.renderPoweredBy()}\n      </div>\n    );\n  }\n}\n\nconst InfoCard = (props) => {\n  const { is_socket_connected, title, ok_text, onClickCancel, onClickOk } = props;\n  return (\n    <div className=\"ori-bg-white ori-pad-15 ori-tb-mrgn-10 ori-box-shadow ori-border-radius-5\">\n      <p className=\"ori-b-mrgn-10\">{title}</p>\n      <div className=\"ori-flex-row ori-flex-jc\">\n        {\n          onClickCancel &&\n          <Button className=\"ori-lr-mrgn-10 ori-lr-pad-15 ori-btn-ghost-primary\" size=\"small\" onClick={onClickCancel} >Cancel</Button>\n        }\n        <Button className={classNames(\"ori-lr-mrgn-10 ori-lr-pad-15\", { \"ori-btn-fill-primary\": is_socket_connected })} size=\"small\" onClick={onClickOk} disabled={!is_socket_connected}>{is_socket_connected ? ok_text : \"Connecting...\"}</Button>\n      </div>\n    </div>\n  );\n};\n\nInfoCard.propTypes = {\n  is_socket_connected: PropTypes.bool,\n  title: PropTypes.string,\n  ok_text: PropTypes.string,\n  onClickCancel: PropTypes.func,\n  onClickOk: PropTypes.func,\n};\n\nInfoCard.defaultProps = {\n  is_socket_connected: false,\n  ok_text: 'Ok',\n};\n\nEndChat.propTypes = {\n  isMounted: PropTypes.bool,\n  is_socket_connected: PropTypes.bool,\n  end_chat: PropTypes.object,\n  closeEndChatPopup: PropTypes.func,\n  confirmEndConversation: PropTypes.func,\n  handleFormInputChange: PropTypes.func,\n  handleFormSelectChange: PropTypes.func,\n  submitFormData: PropTypes.func,\n};\n\nEndChat.defaultProps = {\n  is_socket_connected: false,\n  end_chat: {},\n};\n\nexport default DelayComponent(EndChat);\n"],"sourceRoot":""}