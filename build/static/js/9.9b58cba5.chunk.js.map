{"version":3,"sources":["modules/notificationbot/components/notificationbotheader/index.js","modules/notificationbot/index.js"],"names":["NotificationBotHeader","this","props","handleNotificationBotClose","handleViewMore","className","onClick","size","Component","NotificationBot","state","show_header","setNotificationContainerRef","el","notificationsContainer","showHeader","setState","hideHeader","scrollContainerToBottom","scrollToBottom","actions","localStorage","removeItem","LOCAL_STORAGE","UNSEEN_MESSAGES","updateState","handleChatbotInterface","onClickStackBubble","stack_view","page_details","chat_details","sendTextToServer","handleMsgBtnClick","handleOfferSelection","mobile","device_data","screen_width","style","bottom","chatbot_client_info","trigger","mobile_icon_width","icon_width","classNames","maxHeight","onMouseOver","onMouseOut","ref","messages","unseen_messages","messageVotingSuccess","onMessageVoting","messagesContainer","is_typing","typing_text","bubble_animation","notification_bot","psid","is_online","is_socket_connected","is_input_lock","input_lock_text","onInputFocus","emitCustomEvent","React","PureComponent","defaultProps"],"mappings":"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","file":"static/js/9.9b58cba5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CloseIcon from 'react-icons/lib/md/close';\n\nimport './index.scss';\n\nclass NotificationBotHeader extends Component {\n    render() {\n        const { handleNotificationBotClose, handleViewMore } = this.props;\n        return (\n            <div className=\"ori-relative ori-animated ori-fade-in ori-flex-row ori-flex-center ori-pad-5 oriNotificationBotHeaderContainer\">\n                <div className=\"ori-absolute ori-cursor-ptr ori-font-white alignHeaderCloseButton\" onClick={handleNotificationBotClose}>\n                    <CloseIcon size={26} className=\"ori-pad-5 ori-border-circle ori-bg-black-light headerItem\" />\n                </div>\n                <div className=\"ori-bg-black-light ori-cursor-ptr ori-font-white ori-tb-pad-3 ori-lr-pad-20 ori-border-radius-20 ori-box-shadow-dark headerItem\" onClick={handleViewMore}>\n                    <span>view all</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationBotHeader.propTypes = {\n    handleNotificationBotClose: PropTypes.func,\n    handleViewMore: PropTypes.func,\n};\n\nexport default NotificationBotHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from 'react-icons/lib/md/close';\n\nimport './index.scss';\n\nimport { chatbot_client_info } from '../../data/config/urls';\nimport { scrollToBottom, LOCAL_STORAGE } from '../../data/config/utils';\n\nimport NotificationBotHeader from './components/notificationbotheader';\nimport ChatBotConversation from '../../components/chatbotconversation';\nimport InputComposer from '../../components/inputcomposer';\n\nclass NotificationBot extends React.PureComponent {\n    state = {\n        show_header: false,\n    };\n\n    setNotificationContainerRef = el => { \n        this.notificationsContainer = el; \n    };\n\n    showHeader = () => {\n        this.setState({\n            show_header: true\n        });\n    };\n\n    hideHeader = () => {\n        this.setState({\n            show_header: false\n        });\n    };\n\n    scrollContainerToBottom = () => {\n        scrollToBottom(this.notificationsContainer);\n    };\n\n    handleNotificationBotClose = () => {\n        const { actions } = this.props;\n        localStorage.removeItem(LOCAL_STORAGE.UNSEEN_MESSAGES);\n        actions.updateState('unseen_messages', []);\n    };\n\n    handleViewMore = () => {\n        const { actions } = this.props;\n        localStorage.removeItem(LOCAL_STORAGE.UNSEEN_MESSAGES);\n        actions.updateState('unseen_messages', []);\n        actions.handleChatbotInterface(true);\n    };\n\n    onClickStackBubble = () => { \n        if(this.props.stack_view) \n            this.handleViewMore(); \n    };\n\n    render() {\n        const { page_details, chat_details, sendTextToServer, handleMsgBtnClick, handleOfferSelection, stack_view, actions } = this.props;\n        const { show_header } = this.state;\n        const mobile = page_details.device_data.screen_width && page_details.device_data.screen_width < 481;\n        return (\n            <div className=\"ori-fixed  oriNotificationBotContainer\" style={{ bottom: mobile ? `${chatbot_client_info.trigger.mobile_icon_width + 20 + 20}px` : `${chatbot_client_info.trigger.icon_width + 20 + 10}px` }}>\n                <div className={ classNames(\"ori-relative ori-flex-column  oriNotificationBotContentContainer\",{\"ori-no-tb-pad\": stack_view})} style={{ maxHeight: mobile ? `calc(100vh - ${chatbot_client_info.trigger.mobile_icon_width + 20 + 20 + 20}px)` : `calc(100vh - ${chatbot_client_info.trigger.icon_width + 20 + 20 + 20}px)` }} onMouseOver={this.showHeader} onMouseOut={this.hideHeader}>\n                    {\n                        !stack_view &&\n                        <div className={classNames(\"ori-absolute notificationBotHeader\", { \"ori-display-none\": !show_header })}>\n                            <NotificationBotHeader handleNotificationBotClose={this.handleNotificationBotClose} handleViewMore={this.handleViewMore} />\n                        </div>\n                    }\n                    {\n                        stack_view &&\n                        <div className=\"ori-absolute ori-animated ori-zoom-in ori-cursor-ptr ori-font-white stackCloseContainer\" onClick={this.handleNotificationBotClose}>\n                            <CloseIcon size={16} className=\"ori-border-circle ori-bg-black-light alignStackClose\" />\n                        </div>\n                    }\n                    <div className={classNames(\"ori-full-flex ori-full-parent-height conversationContainer\", { \"ori-cursor-ptr\": stack_view })} ref={this.setNotificationContainerRef} onClick={this.onClickStackBubble} >\n                        <ChatBotConversation messages={chat_details.unseen_messages} messageVotingSuccess={actions.onMessageVoting} handleMsgBtnClick={handleMsgBtnClick} handleOfferSelection={handleOfferSelection} messagesContainer={this.notificationsContainer} is_typing={chat_details.is_typing} typing_text={chat_details.typing_text} stack_view={stack_view} bubble_animation={stack_view ? \"ori-fade-in-right\" : \"ori-fade-in-up\"} notification_bot />\n                    </div>\n                    <div className={classNames(\"ori-absolute oriNotificationFooter\", { \"ori-display-none\": stack_view })}>\n                        <div className={\"inputComposerContainer\"}>\n                            <InputComposer psid={chat_details.psid} sendTextToServer={sendTextToServer} is_online={chat_details.is_socket_connected} is_input_lock={chat_details.is_input_lock} input_lock_text={chat_details.input_lock_text} onInputFocus={this.scrollContainerToBottom} emitCustomEvent={actions.emitCustomEvent} notification_bot />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationBot.propTypes = {\n    chat_details: PropTypes.object,\n    page_details: PropTypes.object,\n    actions: PropTypes.object,\n    sendTextToServer: PropTypes.func,\n    handleMsgBtnClick: PropTypes.func,\n    handleOfferSelection: PropTypes.func,\n    stack_view: PropTypes.bool\n};\n\nNotificationBot.defaultProps = {\n    stack_view: false,\n};\n\nexport default NotificationBot;\n"],"sourceRoot":""}